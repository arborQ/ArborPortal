// <auto-generated />
using System;
using AuthorizeLogin.Persistance.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AuthorizeLogin.Persistance.Database.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20190813112257_hash_salt_password_type")]
    partial class hash_salt_password_type
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AuthorizeLogin.Persistance.Database.Models.LoginData", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<int>("PasswordSalt")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("LoginData");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            PasswordHash = new byte[] { 64, 132, 230, 137, 197, 174, 107, 113, 72, 124, 130, 228, 15, 4, 253, 204, 216, 3, 97, 136 },
                            PasswordSalt = -1150432778
                        });
                });

            modelBuilder.Entity("AuthorizeLogin.Persistance.Database.Models.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("FirstName")
                        .HasMaxLength(100);

                    b.Property<string>("LastName")
                        .HasMaxLength(100);

                    b.Property<long?>("LoginDataId");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("LoginDataId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            EmailAddress = "admint@admin.pl",
                            FirstName = "admin",
                            LastName = "admin",
                            LoginDataId = 1L,
                            UserName = "admin"
                        });
                });

            modelBuilder.Entity("AuthorizeLogin.Persistance.Database.Models.User", b =>
                {
                    b.HasOne("AuthorizeLogin.Persistance.Database.Models.LoginData", "LoginData")
                        .WithMany()
                        .HasForeignKey("LoginDataId");
                });
#pragma warning restore 612, 618
        }
    }
}
