version: '3'
volumes:
  node_modules_react:
  node_modules_vue:
  esdata01:
    driver: local
services:
  # seq:
  #   image: datalust/seq:latest
  #   ports:
  #     - "5342:80"
  #   environment:
  #     ACCEPT_EULA: Y
  #   restart: unless-stopped
  #   volumes:
  #     - ./seq-data:/data
  # redis:
  #   image: redis:4-alpine
  #   container_name: redis
  #   command: redis-server --requirepass yourpassword
  #   ports:
  #     - '6379:6379'
  #   expose:
  #     - 6379
  kibana:
    image: docker.elastic.co/kibana/kibana:7.3.2
    container_name: kibana
    ports:
      - "5601:5601"
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    depends_on:
      - es01
  es01:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.3.1
    container_name: es01
    environment:
      - node.name=es01
      - discovery.seed_hosts=es02
      - cluster.initial_master_nodes=es01,es02
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata01:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
#   es02:
#     image: docker.elastic.co/elasticsearch/elasticsearch:7.3.1
#     container_name: es02
#     environment:
#       - node.name=es02
#       - discovery.seed_hosts=es01
#       - cluster.initial_master_nodes=es01,es02
#       - cluster.name=docker-cluster
#       - bootstrap.memory_lock=true
#       - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
#     ulimits:
#       memlock:
#         soft: -1
#         hard: -1
#     volumes:
#       - esdata02:/usr/share/elasticsearch/data
#     networks:
#       - esnet
#   rabbitmq:
#     image: "rabbitmq:latest"
#     environment:
#         RABBITMQ_DEFAULT_USER: "rabbitmq"
#         RABBITMQ_DEFAULT_PASS: "rabbitmq"
#     ports:
#       - "5672:5672"
#     volumes:
#         - "./rabbitmq:/var/lib/rabbitmq"
#         - "./enabled_plugins:/etc/rabbitmq/enabled_plugins"
#   db:
#     container_name: db
#     image: "microsoft/mssql-server-linux"
#     restart: always
#     ports:
#       - "1433:1433"
#     expose: 
#       - 1433
#     volumes:
#       - ./db/data/mssql:/var/opt/mssql/data
#       - ./db/logs/mssql:/var/opt/mssql/log
#     environment:
#       ACCEPT_EULA: "Y"
#       SA_PASSWORD: "D.`(>q8'5d,ngL>H"
# networks:
#   esnet:
# volumes:
#   esdata01:
#     driver: local
#   esdata02:
#     driver: local
    
  # vue:
  #   build: ./VueFrontEnd
  #   container_name: vueweb
  #   restart: always
  #   volumes:
  #     - ./VueFrontEnd:/usr/src/vue
  #   ports:
  #     - "8082:8082"
  # web:
  #   build: ./ReactFrontEnd
  #   container_name: web
  #   restart: always
  #   volumes:
  #     - ./ReactFrontEnd:/usr/src/app
  #   ports:
  #     - "8080:8080"
  # api:
  #   build: ./CoreStart
  #   container_name: api_core
  #   restart: always
  #   environment:
  #     - ConnectionStrings:DefaultConnection=Data Source=db;Initial Catalog=CoreStart;Persist Security Info=True;User ID=sa;Password=D.`(>q8'5d,ngL>H
  #     - ElasticSearch:DefaultNode=http://localhost:9299
  #     - ForwardedHeaders=web
  #   depends_on:
  #     - db
  #     - elasticsearch
  #   links:
  #     - elasticsearch
  # nginx: 
  #   image: nginx:latest
  #   container_name: nginx
  #   restart: always
  #   ports:
  #     - "9000:9000"
  #     - "9001:9001"
  #   expose:
  #     - 9000
  #     - 9001
  #   links:
  #     - web
  #     # - vue
  #     - api
  #     # - node
  #     # - python
  #   volumes:
  #     - ./nginx/nginx.conf:/etc/nginx/nginx.conf
  #     - ./nginx/logs:/var/log/nginx/

